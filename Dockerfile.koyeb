# Stage 1: Build the frontend application
FROM node:20 AS frontend-build

WORKDIR /app/frontend

# Copy frontend application code and dependencies
COPY Front/SneakR/package*.json ./
RUN npm install
COPY Front/SneakR/ .

# Stage 2: Build the backend application
FROM node:20 AS backend-build

WORKDIR /app/backend

# Copy backend application code and dependencies
COPY Back/package*.json ./
RUN npm install --production
COPY Back/ .

# Stage 3: Set up MySQL database
FROM mysql:8.0 AS mysql-build

# Copy the SQL dump file for database initialization
COPY Back/dump.sql /docker-entrypoint-initdb.d/dump.sql

# Stage 4: Combine all components into a single image
FROM ubuntu:20.04

# Install necessary packages and configure MySQL
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server curl && \
    rm -rf /var/lib/apt/lists/*

# Copy MySQL setup from the mysql-build stage
COPY --from=mysql-build /docker-entrypoint-initdb.d/dump.sql /docker-entrypoint-initdb.d/dump.sql

# Copy frontend build from the frontend-build stage
COPY --from=frontend-build /app/frontend /app/frontend

# Copy backend build from the backend-build stage
COPY --from=backend-build /app/backend /app/backend

# Copy the startup script and make it executable
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Expose necessary ports
EXPOSE 3306 5000 5173

# Set the command to run the startup script
CMD ["/start.sh"]
