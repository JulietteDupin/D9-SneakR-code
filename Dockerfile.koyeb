# Stage 1: MySQL setup
FROM mysql:8.0 AS mysql

# Copy the SQL dump into the container
COPY ./Back/dump.sql /docker-entrypoint-initdb.d/dump.sql

# Expose the MySQL port
EXPOSE 3306

# Stage 2: Backend setup
FROM node:20 AS backend-build

# Set the working directory and copy backend source code
WORKDIR /app/backend
COPY Back/ .

# Install production dependencies
RUN npm install --production

# Expose the backend port
EXPOSE 5000

# Stage 3: Frontend setup
FROM node:20 AS frontend-build

# Set the working directory and copy frontend source code
WORKDIR /app/frontend
COPY Front/SneakR/ .

# Install dependencies and build the frontend application
RUN npm install

# Expose the frontend port
EXPOSE 5173

# Final stage: Combine everything and prepare the environment
FROM ubuntu:20.04

# Install necessary tools
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    curl \
    # Install other necessary packages for running your application
    && rm -rf /var/lib/apt/lists/*

# Copy MySQL setup from the mysql stage
COPY --from=mysql /docker-entrypoint-initdb.d/dump.sql /docker-entrypoint-initdb.d/dump.sql

# Copy backend build from the backend-build stage
COPY --from=backend-build /app/backend /app/backend

# Copy frontend build from the frontend-build stage
COPY --from=frontend-build /app/frontend /app/frontend

# Copy the startup script and make it executable
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Expose necessary ports
EXPOSE 3306 5000 5173

# Set the command to run the startup script
CMD ["/start.sh"]
